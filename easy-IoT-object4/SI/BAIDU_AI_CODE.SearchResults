---- p_dbg Matches (182 in 40 files) ----
nrf2401_recv_thread in 24l01.c (drivers\stm32f4xx\src) : 		//p_dbg("sta:%x", sta);
nrf2401_recv_thread in 24l01.c (drivers\stm32f4xx\src) : 			p_dbg("NRF2401_TX_FIFO_FULL");
nrf2401_recv_thread in 24l01.c (drivers\stm32f4xx\src) : 			p_dbg("NRF2401_MAX_TX");
nrf2401_recv_thread in 24l01.c (drivers\stm32f4xx\src) : 			p_dbg("NRF2401_TX_OK");
nrf2401_recv_thread in 24l01.c (drivers\stm32f4xx\src) : 			p_dbg("NRF2401_RX_OK");
NRF24L01_Init in 24l01.c (drivers\stm32f4xx\src) : 		p_dbg("2401 err");
do_play_pcm_stream in adpcm.c (app\src\audio) : 					//p_dbg("[%d]", stereo_out[j *2]);
do_play_pcm_stream in adpcm.c (app\src\audio) : 				//p_dbg("remain1:%d", audio_cfg.dec_input->data_len - i * ONCE_DECODE_SIZE);
speex_init in audio.c (app\src\audio) : 	p_dbg("enc_frame_size:%d, dec_frame_size:%d", audio_cfg.enc_frame_size, audio_cfg.dec_frame_size);
iot_speex_encode in audio.c (app\src\audio) : 	//p_dbg("encode ret:%d", ret);
iot_speex_decode in audio.c (app\src\audio) : 	p_dbg("decode size;%d", out_size);
audio.c (app\src\audio) line 317 : 		p_dbg("请先打开音频");
audio.c (app\src\audio) line 323 : 		p_dbg("mp3播放模式");
audio.c (app\src\audio) line 333 : 		p_dbg("pcm播放模式(语音对讲)");
playback_record_audio in audio.c (app\src\audio) : 	p_dbg("frame:%d", frames);
record_to_flash_timeout_cb in audio.c (app\src\audio) : 	p_dbg("stop record_to_flash");
update_ai_event in audio_low_level.c (drivers\stm32f4xx\src) :         p_dbg("[update_ai_event: audio OK]\r\n");
get_ai_audio_pcm_data_len in audio_low_level.c (drivers\stm32f4xx\src) :         p_dbg("recording is ongoing\r\n");
send_and_encode_text_event in audio_low_level.c (drivers\stm32f4xx\src) :     p_dbg("send_and_encode_text_event data len: [%d]", len);
send_and_encode_text_event in audio_low_level.c (drivers\stm32f4xx\src) :     p_dbg("encode_and_send_text_data urlencode:%s", uart_url_data);
dac_low_level_open in audio_low_level.c (drivers\stm32f4xx\src) : 	p_dbg("set samplerate:%d, conter:%d, apbclock:%d\n", DEFAULT_PLAY_SAMPLERATE, Counter, apbclock);
dac_switch_samplerate in audio_low_level.c (drivers\stm32f4xx\src) : 	p_dbg("dac change samplerate:%d\n", val);
adc_switch_samplerate in audio_low_level.c (drivers\stm32f4xx\src) : 	p_dbg("adc change samplerate:%d\n", val);
adc_recv_thread in audio_low_level.c (drivers\stm32f4xx\src) : 		//p_dbg("[adc_recv_thread audio len%d]", adc.len/2);
adc_recv_thread in audio_low_level.c (drivers\stm32f4xx\src) : 				p_dbg("[ever:%d]", ever_value);
adc_recv_thread in audio_low_level.c (drivers\stm32f4xx\src) : 				//p_dbg("[range:%d]", range);
adc_recv_thread in audio_low_level.c (drivers\stm32f4xx\src) : 				//p_dbg("[audio data udp_broadcast len%d]", src_len*2);
BH1750FVI in BH1750FVI.c (drivers\stm32f4xx\src) :   //p_dbg("light strength raw[%f]", light);
BH1750_ReadResult in BH1750FVI.c (drivers\stm32f4xx\src) :     //p_dbg("light resultH[%x]resultL[%x]", resultH, resultL);
config.h (libmad-0.15.1b) line 7 : //#define fprintf(X, ...) p_dbg(...)
debug.h (app\inc) line 24 : #define p_dbg(...) do{if(!dbg_level)break;printf("[D: %d.%03d] ",  os_time_get()/1000, os_time_get()%1000);printf(__VA_ARGS__); printf("\r\n");}while(0)
debug.h (app\inc) line 49 : #define p_dbg(...)
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 		p_dbg("request:%x, server_id:%x", requested_align, server_id_align);
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 					p_dbg("2");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 					p_dbg("3");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 			p_dbg("4");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 			p_dbg("5");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 					p_dbg("6");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 					 p_dbg("7");
handle_dhcp_rcv in dhcpd.c (net\udhcp-0.9.8) : 			 p_dbg("8");
handle_dht11_recv in dht11.c (drivers\stm32f4xx\src) : 				//p_dbg("3:%d", time);
handle_dht11_recv in dht11.c (drivers\stm32f4xx\src) : 				//p_dbg("3:%d", time);
handle_dht11_recv in dht11.c (drivers\stm32f4xx\src) : 					//p_dbg("recv end");
edp_demo in edp_demo.c (onenet\c) :         p_dbg("send connect to server, bytes: %d\n", send_pkg->_write_pos);
edp_demo in edp_demo.c (onenet\c) :         p_dbg("send connect Over, ret: %d\n", ret);
edp_demo in edp_demo.c (onenet\c) :         p_dbg("DeleteBuffer Out\n");
edp_demo in edp_demo.c (onenet\c) :         p_dbg("socket error, close socket and try again\n");
init_onenet_edpclient in edp_demo.c (onenet\c) :     p_dbg("[task]onenet client created");
eth_int_thread in eth_ethernetif.c (net\lwip\src\netif) : 				p_dbg("eth link lost");
eth_int_thread in eth_ethernetif.c (net\lwip\src\netif) : //				p_dbg("eth link ok");
ir_dbg_switch in ir_control - 副本.c (drivers\stm32f4xx\src) : 		p_dbg("开启红外调试打印");
ir_dbg_switch in ir_control - 副本.c (drivers\stm32f4xx\src) : 		p_dbg("关闭红外调试打印");
ir_trig_send in ir_control - 副本.c (drivers\stm32f4xx\src) : 		//p_dbg("[%d]", send_seq[send_pos]);
ir_trig_send in ir_control - 副本.c (drivers\stm32f4xx\src) : 		p_dbg("ir send end");
ir_timer_callback in ir_control - 副本.c (drivers\stm32f4xx\src) : 	p_dbg("ir_timer_callback change [%d]", i);
ir_start_send in ir_control - 副本.c (drivers\stm32f4xx\src) : 	p_dbg("ir send start");
handle_ir_recv in ir_control - 副本.c (drivers\stm32f4xx\src) : 					p_dbg("ir recv over");
handle_key in key.c (drivers\stm32f4xx\src) :     p_dbg("key:%d, type:%d", key_type, long_press);
handle_key in key.c (drivers\stm32f4xx\src) :                     p_dbg("alreading in record");
handle_key in key.c (drivers\stm32f4xx\src) :                     p_dbg("start record");
init_mp3_format in madlld.c (libmad-0.15.1b) : 	       p_dbg("init_mp3_format malloc Frame error len[%d]\n", sizeof(struct mad_frame));
init_mp3_format in madlld.c (libmad-0.15.1b) : 	    p_dbg("init_mp3_format malloc Synth error len[%d]\n", sizeof(struct mad_synth));
PrintFrameInfo in madlld.c (libmad-0.15.1b) : 	p_dbg("%s: %lu kb/s audio MPEG layer %s stream %s CRC, "
MpegAudioDecoder in madlld.c (libmad-0.15.1b) : 					p_dbg("next_frame == 0");
main_thread in main.c (app\src) : 	p_dbg("SYSCLK_Frequency:%d,HCLK_Frequency:%d,PCLK1_Frequency:%d,
main_thread in main.c (app\src) : 	p_dbg("code version:%s", VIRSION);
main_thread in main.c (app\src) : 	p_dbg("startup time:%d.%d S", os_time_get() / 1000, os_time_get() % 1000);
main_thread in main.c (app\src) : 	p_dbg("mem pool1 remain:%d/%d", mem_get_free() , mem_get_size());
main_thread in main.c (app\src) : 	p_dbg("mem pool2 remain:%d/%d", mem_get_free2() , mem_get_size2());
rfid_poll_callback in MFRC522.C (drivers\stm32f4xx\src) : 		p_dbg("new card:%d", cur_id);
init_rc522 in MFRC522.C (drivers\stm32f4xx\src) : 	p_dbg("%x", ret);
init_rc522 in MFRC522.C (drivers\stm32f4xx\src) : 	p_dbg("%x", ret);
sdio_io_rw_ext_helper in moal_sdio_mmc.c (net\wlan_src\mlinux) : 		//p_dbg("sdio_io_rw_ext_helper,addr:%d,sz;%d,cur_blksize:%d \n",addr,size, func.cur_blksize);
sdio_enable_func in moal_sdio_mmc.c (net\wlan_src\mlinux) : 	p_dbg("SDIO: Enabled func %d\n", reg);
sdio_claim_irq in moal_sdio_mmc.c (net\wlan_src\mlinux) : 	p_dbg("sdio_claim_irq1 :%x\n", reg);	
sdio_claim_irq in moal_sdio_mmc.c (net\wlan_src\mlinux) : 	p_dbg("sdio_claim_irq2 :%x\n", reg);	
red_ov7673_id in ov7670.c (drivers\stm32f4xx\src) : 	p_dbg("ov7673 id:%x, ver:%x, mid:%x", id[0], id[1], ret);
OV7670_init in ov7670.c (drivers\stm32f4xx\src) : 		p_dbg("ov7670 init faild");
OV7670_init in ov7670.c (drivers\stm32f4xx\src) : 	p_dbg("ov7670 ok");
raw_packet in packet.c (net\udhcp-0.9.8) : 	p_dbg("pading:%d", padding);
checksum in packet_save.c (net\udhcp-0.9.8) : 	p_dbg("get sum, size:%d", nleft);
raw_packet in packet_save.c (net\udhcp-0.9.8) : 	p_dbg("pading:%d", padding);
raw_packet in packet_save.c (net\udhcp-0.9.8) : 	p_dbg("chksum:%x", packet->udp.chksum);
raw_packet in packet_save.c (net\udhcp-0.9.8) : 	p_dbg("check:%x", packet->ip.check);
SD_SelectDeselect in sdcard.c (drivers\stm32f4xx\src) : 		p_dbg("SD_SelectDeselect ok\n");
mmc_send_relative_addr in sdcard.c (drivers\stm32f4xx\src) : 	p_dbg("mmc_send_relative_addr ok:%x\n", *rca);
sdio_read_cccr in sdcard.c (drivers\stm32f4xx\src) : 	p_dbg("SDIO_CCCR_CCCR:%x\n", cccr_vsn);
sdio_read_cccr in sdcard.c (drivers\stm32f4xx\src) : 	p_dbg("SDIO_CCCR_CAPS:%x\n", data);
sdio_read_cccr in sdcard.c (drivers\stm32f4xx\src) : 		p_dbg("SDIO_CCCR_POWER:%x\n", data);
sdio_read_cccr in sdcard.c (drivers\stm32f4xx\src) : 		p_dbg("SDIO_CCCR_SPEED:%x\n", data);
mmc_sdio_switch_hs in sdcard.c (drivers\stm32f4xx\src) : 		p_dbg("mmc_sdio_switch_hs ok\n");
sdio_enable_wide in sdcard.c (drivers\stm32f4xx\src) : 		p_dbg("sdio_enable_wide ok\n");
sdio_read_cis in sdcard.c (drivers\stm32f4xx\src) : 	p_dbg("read_cis,fn:%d,addr:%d\n", f_n, ptr);
sdio_read_cis in sdcard.c (drivers\stm32f4xx\src) : 			p_dbg("tuple_cnt over\n");
senser_poll_callback in sensers.c (app\src) :         p_dbg("Poll temperature:[%d]", (int)temp[2]);
senser_poll_callback in sensers.c (app\src) :         p_dbg("Poll humidity:[%d]", (int)temp[0]);
senser_poll_callback in sensers.c (app\src) :     p_dbg("Poll MQ2:[%d]\n", (int)g_mq2);
senser_poll_callback in sensers.c (app\src) :     p_dbg("Poll BH1750:[%d]\n", (int)g_bh1750);
sendOffer in serverpacket.c (net\udhcp-0.9.8) : 		p_dbg("1");
sendOffer in serverpacket.c (net\udhcp-0.9.8) : 		   p_dbg("2");
sendOffer in serverpacket.c (net\udhcp-0.9.8) : 		p_dbg("3");
__dev_alloc_skb in skbuff.c (net\wlan_src\user) : 		p_dbg("alloc:%x, %x", skb, skb->head);
__dev_alloc_skb in skbuff.c (net\wlan_src\user) : 	p_dbg("alloc1:%d,%x, %x", length + NET_SKB_PAD, skb, skb->head);
ssl.h (iotx-sdk-c\src\libs\mbedtls\include\mbedtls) line 966 :  * \param p_dbg    debug parameter
EXTI9_5_IRQHandler in stm32f4xx_it.c (drivers\stm32f4xx\src) : 		p_dbg("RFID IRQ %x", n);
timer_setup in timer.c (kernel\api\src) : 		p_dbg("repeat:%d\n", time_val);
timer_setup in timer.c (kernel\api\src) : 		p_dbg("one short:%d\n", time_val);
DMA2_Stream7_IRQHandler in usart.c (drivers\stm32f4xx\src) : 	p_dbg("u_send irq\n");
uart1_send in usart.c (drivers\stm32f4xx\src) : 	p_dbg("uart1 send start\n");
uart1_send in usart.c (drivers\stm32f4xx\src) : 	p_dbg("uart1 send end\n");
uart1_send in usart.c (drivers\stm32f4xx\src) : 		p_dbg("uart1 send a  pkg:%d\n", size);
USBH_Open_Channel in usbh_hcs.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("%s hc_num:%d, addr:%d, speed:%d, type:%d, mps:%d\n", __FUNCTION__, hc_num, dev_address, speed, ep_type, mps);
USBH_Alloc_Channel in usbh_hcs.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("%s num:%d, addr:%d\n", __FUNCTION__, hc_num, ep_addr);
USBH_BulkReceiveData in usbh_ioreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	//    p_dbg("bulk receive,tg:%d\n", pdev->host.hc[hc_num].toggle_in);
USBH_SubmitSetupRequest in usbh_ioreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	//	p_dbg("usb_control_msg   pipe:%08x, request:%02x, type:%02x, value:%04x, off:%d, buffer_len:%d, timeout:%d\n",
init_msc in usbh_msc_core.c (drivers\stm32f4xx\usb\Class\MSC\Src) :         p_dbg("maxLun:%d", maxLun);
USBH_MSC_ReadCapacity10 in usbh_msc_scsi.c (drivers\stm32f4xx\usb\Class\MSC\Src) :     p_dbg("%d, %d", USBH_MSC_Param.MSCapacity, USBH_MSC_Param.MSPageLength);
USBH_Get_StringDesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 		p_dbg("%s\n", buff);
USBH_GetStatus in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("status:ep:%d, %x\n", ep_num, status);
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("device descriptor");
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	idVendor %d\n", dev_desc->idVendor);
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	idProduct %d\n", dev_desc->idProduct);
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bDeviceClass %d\n", dev_desc->bDeviceClass);
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bDeviceSubClass %d\n", dev_desc->bDeviceSubClass);
print_devdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bNumConfigurations %d\n", dev_desc->bNumConfigurations);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("configuration descriptor");
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bLength %d\n", cfg_desc->bLength);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bDescriptorType %d\n", cfg_desc->bDescriptorType);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	wTotalLength %d\n", cfg_desc->wTotalLength);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bNumInterfaces %d\n", cfg_desc->bNumInterfaces);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bConfigurationValue %d\n", cfg_desc->bConfigurationValue);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	iConfiguration %d\n", cfg_desc->iConfiguration);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bmAttributes %d\n", cfg_desc->bmAttributes);
print_cfgdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bMaxPower %d\n", cfg_desc->bMaxPower);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("interface descriptor");
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bLength:%d\n", if_descriptor->bLength);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bDescriptorType:%d\n", if_descriptor->bDescriptorType);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bInterfaceNumber:%d\n", if_descriptor->bInterfaceNumber);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bAlternateSetting:%d\n", if_descriptor->bAlternateSetting);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bNumEndpoints:%d\n", if_descriptor->bNumEndpoints);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bInterfaceClass:%d\n", if_descriptor->bInterfaceClass);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bInterfaceSubClass:%d\n", if_descriptor->bInterfaceSubClass);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bInterfaceProtocol:%d\n", if_descriptor->bInterfaceProtocol);
print_Interfacedesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	iInterface:%d\n", if_descriptor->iInterface);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("endpoint descriptor");
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bLength:%d\n", ep_descriptor->bLength);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bDescriptorType:%d\n", ep_descriptor->bDescriptorType);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bEndpointAddress:0x%x\n", ep_descriptor->bEndpointAddress);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bmAttributes:%d\n", ep_descriptor->bmAttributes);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	wMaxPacketSize:%d\n", ep_descriptor->wMaxPacketSize);
print_EPdesc in usbh_stdreq.c (drivers\stm32f4xx\usb\STM32_USB_HOST_Library\src) : 	p_dbg("	bInterval:%d\n", ep_descriptor->bInterval);
usb_enumeration in usbh_usr.c (drivers\stm32f4xx\usb\src) : 		p_dbg("speed %d\n", p_host->device_prop.speed);
usb_polling_timer in usbh_usr.c (drivers\stm32f4xx\usb\src) : 		p_dbg("usb connect");
usb_polling_timer in usbh_usr.c (drivers\stm32f4xx\usb\src) : 					p_dbg("Udisk init OK, try to mount the file system");
usb_polling_timer in usbh_usr.c (drivers\stm32f4xx\usb\src) : 		p_dbg("usb disconnect");
USB_OTG_CoreInit_ex in usb_core.c (drivers\stm32f4xx\usb\STM32_USB_OTG_Driver\src) : 		p_dbg("rd usbcfg:%08x", usbcfg.d32);
USB_OTG_CoreInit_ex in usb_core.c (drivers\stm32f4xx\usb\STM32_USB_OTG_Driver\src) : 		p_dbg("wt usbcfg:%08x", usbcfg.d32);
cfg80211_scan_done in usr_cfg.c (net\wlan_src\user) : 	p_dbg("cfg80211_scan_done");
cfg80211_connect_result in usr_cfg.c (net\wlan_src\user) : 	p_dbg("cfg80211_connect_result status:%d", status);
erase_chip in w25p80.c (drivers\stm32f4xx\src) : 	p_dbg("%s: %s %lldKiB\n",
m25p80_erase in w25p80.c (drivers\stm32f4xx\src) : 	p_dbg("%s: %s %s 0x%x, len %d\n",
m25p80_read in w25p80.c (drivers\stm32f4xx\src) : 	p_dbg("%s: %s %s 0x%08x, len %zd\n",
m25p80_write in w25p80.c (drivers\stm32f4xx\src) : 	p_dbg("%s: %s %s 0x%08x, len %zd\n",
m25p80_init in w25p80.c (drivers\stm32f4xx\src) :  	p_dbg("flash id:%08x", id);
wifi_set_mode in wifi.c (app\src) : 		p_dbg("change_virtual_intf");
new_scan_req in wifi.c (app\src) : 	p_dbg("_new_connect_scan_req,channels:%d,creq_size:%d\n",n_channels,sizeof(*creq) + sizeof(struct cfg80211_ssid) +
wifi_connect in wifi.c (app\src) : 	p_dbg("enter %s\n", __FUNCTION__);
wifi_connect in wifi.c (app\src) : 	p_dbg("exit %s\n", __FUNCTION__);
work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) line 88 :     //p_dbg("enter %s\n", __FUNCTION__);
work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) line 97 :     //p_dbg("ret:%d", len);
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :     p_dbg("main_process func");
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :     p_dbg("Connect to:%s, PW:%s", web_cfg.sta.essid, web_cfg.sta.key);
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :         p_dbg("wifi connect ok");
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :             p_dbg("建立ap:%s, 密码:%s", web_cfg.ap.essid, web_cfg.ap.key);
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :             p_dbg("Connect to:%s, PW:%s", web_cfg.sta.essid, web_cfg.sta.key);
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :                 p_dbg("wifi connect ok");
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :             p_dbg("Connect to:%s, PW:%s", web_cfg.sta.essid, web_cfg.sta.key);
main_process in work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) :                 p_dbg("wifi connect ok");
work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) line 470 :                         p_dbg("rcv from:%d,%d,%d,%d,%d,%d\n",udp_remote_addr.sa_data[0],remote_addr.sa_data[1],
work.c (F:\创新项目\Finish\easy-IoT-object4\app\src) line 508 :                         //p_dbg("socket:%d rcv:%d\n", i, size);
wpa_derive_ptk in wpa.c (net\wpa) : 	p_dbg("wpa_derive_ptk,sha256:%d\n",wpa_key_mgmt_sha256(sm->key_mgmt));
rc4_skip in wpa.c (net\wpa) : 	p_dbg("enter rc4_skip\n");
